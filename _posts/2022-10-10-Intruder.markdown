---
layout: post
title:  "Intruder (Misc Challenge Writeup) -- CTF GDG Algiers 2022"
date:   2022-10-10
image: /gdgalgiers/logo.png
---
<p class="intro"><span class="dropcap">T</span>he <a href="https://www.gdgalgiers.com//">GDG Algiers</a> one of the largest community of developers and tech enthusiasts in Algeria and MENA region, has organized the first edition of the GDG Algiers CTF. Competition started October 7 and finish 48 hours later. Was a very fun and hard CTF, with some medium challenges. Very good infra and support. We chose this misc challenge, because it's a clever way to hide info inside an image.</p>


#### Challenge Description: 

<figure>
        <img src="/assets/img/gdgalgiers/chall2.png" alt="" />
        <figcaption>Intruder</figcaption>
</figure>

File to download ([source here](https://raw.githubusercontent.com/leonuz/CTFs/main/stuff/AK.png))


We start analyzing the image with Online Steganography tools as [aperisolve](https://www.aperisolve.com/) and [fotoforensics](https://fotoforensics.com/) and local tools as [stegsolve](https://wiki.bi0s.in/steganography/stegsolve/) and [zsteg](https://github.com/zed-0xff/zsteg)) without any apparent result.

Then we started to analyze the file with a forensic tools called [binwalk](https://www.kali.org/tools/binwalk/) and these are the results:


{%- highlight bash -%}
┌──(leonuz㉿sniperhack)-[~/…/ctf/gdgalgiers/misc/intruder]
└─$ binwalk -e AK.png

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
0             0x0             PNG image, 1024 x 370, 8-bit/color RGBA, non-interlaced
96            0x60            Zlib compressed data, best compression
223958        0x36AD6         Zlib compressed data, default compression


┌──(leonuz㉿sniperhack)-[~/…/ctf/gdgalgiers/misc/intruder]
└─$ ls -la
total 236
drwxr-xr-x 4 leonuz leonuz   4096 Oct  9 18:22 .
drwxr-xr-x 6 leonuz leonuz   4096 Oct  8 17:12 ..
-rw-r--r-- 1 leonuz leonuz 224842 Oct  7 12:30 AK.png
drwxr-xr-x 2 leonuz leonuz   4096 Oct  9 18:22 _AK.png.extracted

┌──(leonuz㉿sniperhack)-[~/…/ctf/gdgalgiers/misc/intruder]
└─$ cd _AK.png.extracted

┌──(leonuz㉿sniperhack)-[~/…/gdgalgiers/misc/intruder/_AK.png.extracted]
└─$ ls
36AD6  36AD6.zlib  60  60.zlib

┌──(leonuz㉿sniperhack)-[~/…/gdgalgiers/misc/intruder/_AK.png.extracted]
└─$ file *
36AD6:      ASCII text, with very long lines (24642), with no line terminators
36AD6.zlib: zlib compressed data
60:         empty
60.zlib:    zlib compressed data

{%- endhighlight -%}

We find a text file called *36AD6*


<figure>
        <img src="/assets/img/gdgalgiers/img.png" alt="" />
        <figcaption>36AD6 file content</figcaption>
</figure>

We can see a pattern where the characters "31" are, let's clean it up a bit, converting those "31" into spaces

{%- highlight bash -%}
┌──(leonuz㉿sniperhack)-[~/…/gdgalgiers/misc/intruder/_AK.png.extracted]
└─$ sed -i 's/31/ /g' 36AD6
{%- endhighlight -%}

<figure>
        <img src="/assets/img/gdgalgiers/img2.png" alt="" />
        <figcaption>36AD6 with spaces</figcaption>
</figure>

Ok, we have a QR code. Now let's play a bit with columns and rows 

<figure>
        <img src="/assets/img/gdgalgiers/img4.png" alt="" />
        <figcaption>columns and rows</figcaption>
</figure>

Almost there...

<figure>
        <img src="/assets/img/gdgalgiers/img5.png" alt="" />
        <figcaption>columns and rows</figcaption>
</figure>

and we have the QR code!

<figure>
        <img src="/assets/img/gdgalgiers/img6.png" alt="" />
        <figcaption>columns=222 and rows=88</figcaption>
</figure>

When we scan the QR code with a smartphone, we get the flag!

<figure>
        <img src="/assets/img/gdgalgiers/qr_scan.png" alt="" />
        <figcaption>columns=222 and rows=88</figcaption>
</figure>  

#### CyberErudites{pN6_ChUnK5_4r3_N1c3_P14C3_70_H1d3}  


- - -

Thanks [GDG Algiers](https://www.gdgalgiers.com/), [Shellmates Club](https://www.shellmates.club/) and CyberErudites team for the excellent job.   

Kudos to everyone who put the event together 

For fun and knowledge, always think out of the box! :)

<figure>
        <img src="/assets/img/gdgalgiers/score.png" alt="" />
</figure>
